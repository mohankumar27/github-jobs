{"version":3,"sources":["utils/useFetchJobs.js","Components/Job/Job.js","Components/JobPagination/JobPagination.js","Components/SearchForm/SearchForm.js","App.js","index.js"],"names":["ACTIONS","proxyurl","BASE_URL","reducer","state","action","type","loading","jobs","error","payload","hasNextPage","useFetchJobs","params","page","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","source","get","cancelToken","token","markdown","then","res","data","catch","err","isCancel","cancelToken2","length","cancel","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","how_to_apply","height","src","company_logo","alt","Text","Button","onClick","prevOpen","Collapse","in","description","JobPagination","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","Container","event","preventDefault","param","target","prevParams","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d85d5f0c.chunk.js","sourcesContent":["import { useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ACTIONS = {\r\n  MAKE_REQUEST: \"make-request\",\r\n  GET_DATA: \"get-data\",\r\n  ERROR: \"error\",\r\n  HAS_NEXT_PAGE: \"has-next-page\",\r\n};\r\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\"; //to avoid CORS policy error. Solution: \"https://stackoverflow.com/questions/43871637/no-access-control-allow-origin-header-is-present-on-the-requested-resource-whe\"\r\nconst BASE_URL = \"https://jobs.github.com/positions.json\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.MAKE_REQUEST:\r\n      return { ...state, loading: true, jobs: [], error: false };\r\n    case ACTIONS.GET_DATA:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        jobs: action.payload.jobs,\r\n        error: false,\r\n      };\r\n    case ACTIONS.ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        jobs: [],\r\n        error: action.payload.error,\r\n      };\r\n    case ACTIONS.HAS_NEXT_PAGE:\r\n      return { ...state, hasNextPage: action.payload.hasNextPage };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useFetchJobs = (params, page) => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    jobs: [],\r\n    loading: true,\r\n    error: false,\r\n    hasNextPage: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const cancelToken1 = axios.CancelToken.source();\r\n    dispatch({ type: ACTIONS.MAKE_REQUEST });\r\n    axios\r\n      .get(proxyurl + BASE_URL, {\r\n        cancelToken: cancelToken1.token,\r\n        params: { markdown: true, page: page, ...params },\r\n      })\r\n      .then((res) => {\r\n        dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } });\r\n      })\r\n      .catch((err) => {\r\n        if (axios.isCancel(err)) return;\r\n        dispatch({ type: ACTIONS.ERROR, payload: { error: err } });\r\n      });\r\n\r\n    const cancelToken2 = axios.CancelToken.source();\r\n    axios\r\n      .get(proxyurl + BASE_URL, {\r\n        cancelToken: cancelToken2.token,\r\n        params: { markdown: true, page: page + 1, ...params },\r\n      })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: ACTIONS.HAS_NEXT_PAGE,\r\n          payload: { hasNextPage: res.data.length !== 0 },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (axios.isCancel(err)) return;\r\n        dispatch({ type: ACTIONS.ERROR, payload: { error: err } });\r\n      });\r\n\r\n    return () => {\r\n      cancelToken1.cancel();\r\n      cancelToken2.cancel();\r\n    };\r\n  }, [params, page]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetchJobs;\r\n","import React, { useState } from \"react\";\r\nimport { Card, Badge, Button, Collapse } from \"react-bootstrap\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nfunction Job({ job }) {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <Card.Body>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <Card.Title>\r\n              {job.title} -{\" \"}\r\n              <span className=\"text-muted font-weight-light\">\r\n                {job.company}\r\n              </span>\r\n            </Card.Title>\r\n            <Card.Subtitle className=\"text-muted mb-2\">\r\n              {new Date(job.created_at).toLocaleDateString()}\r\n            </Card.Subtitle>\r\n            <Badge variant=\"secondary\" className=\"mr-2\">\r\n              {job.type}\r\n            </Badge>\r\n            <Badge variant=\"secondary\">{job.location}</Badge>\r\n            <div style={{ wordBreak: \"break-all\" }}>\r\n              <ReactMarkdown source={job.how_to_apply} />\r\n            </div>\r\n          </div>\r\n          <img\r\n            className=\"d-none d-md-block\"\r\n            height=\"50\"\r\n            src={job.company_logo}\r\n            alt={job.company}\r\n          />\r\n        </div>\r\n        <Card.Text>\r\n          <Button\r\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n            variant=\"primary\"\r\n          >\r\n            {open ? \"Hide Details\" : \"View Details\"}\r\n          </Button>\r\n        </Card.Text>\r\n        <Collapse in={open}>\r\n          <div className=\"mt-4\">\r\n            <ReactMarkdown source={job.description} />\r\n          </div>\r\n        </Collapse>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Job;\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nexport default function JobPagination({ page, setPage, hasNextPage }) {\r\n  const adjustPage = (amount) => {\r\n    setPage((prevPage) => prevPage + amount);\r\n  };\r\n  return (\r\n    <Pagination>\r\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n      {page !== 1 && (\r\n        <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>\r\n      )}\r\n      {page > 2 && <Pagination.Ellipsis />}\r\n      {page > 2 && (\r\n        <Pagination.Item onClick={() => adjustPage(-1)}>\r\n          {page - 1}\r\n        </Pagination.Item>\r\n      )}\r\n      <Pagination.Item active>{page}</Pagination.Item>\r\n      {hasNextPage && (\r\n        <Pagination.Item onClick={() => adjustPage(1)}>\r\n          {page + 1}\r\n        </Pagination.Item>\r\n      )}\r\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n    </Pagination>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\n\r\nexport default function SearchForm({ params, onParamChange }) {\r\n  return (\r\n    <Form className=\"mb-4\">\r\n      <Form.Row className=\"align-items-end\">\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            onChange={onParamChange}\r\n            value={params.description || \"\"}\r\n            name=\"description\"\r\n            type=\"text\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control\r\n            onChange={onParamChange}\r\n            value={params.location || \"\"}\r\n            name=\"location\"\r\n            type=\"text\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} xs=\"auto\" className=\"m1-2\">\r\n          <Form.Check\r\n            onChange={onParamChange}\r\n            value={params.full_time}\r\n            name=\"full_time\"\r\n            id=\"full-time\"\r\n            label=\"Only Full Time\"\r\n            type=\"checkbox\"\r\n            className=\"mb-2\"\r\n          />\r\n        </Form.Group>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nimport useFetchJobs from \"./utils/useFetchJobs\";\nimport Job from \"./Components/Job/Job\";\nimport JobPagination from \"./Components/JobPagination/JobPagination\";\nimport SearchForm from \"./Components/SearchForm/SearchForm\";\nimport \"./App.css\";\n\nfunction App() {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState(1);\n\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n\n  const handleParamChange = (event) => {\n    event.preventDefault();\n    const param = event.target.name;\n    const value = event.target.value;\n    setPage(1);\n    setParams((prevParams) => {\n      return { ...prevParams, [param]: value };\n    });\n  };\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-4 text-center\">GitHub Jobs</h1>\n      <SearchForm params={params} onParamChange={handleParamChange} />\n      <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && <div className=\"loader\">Loading...</div>}\n      {error && <h1>Error. Try refreshing</h1>}\n      {!(loading || error) && jobs.length === 0 ? (\n        <h2>No results found</h2>\n      ) : (\n        jobs.map((job) => <Job key={job.id} job={job} />)\n      )}\n      <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}